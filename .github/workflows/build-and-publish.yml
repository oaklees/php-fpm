name: Build & Push Images

on:
  push:
    branches:
      - master

    tags:
      - v*

jobs:
  push:

    runs-on: ubuntu-latest

    strategy:
      matrix:
       include:
          # See https://liduan.net/2019/09/17/php-version-in-alpine-linux.html for PHP version vs Alpine version
         - php-version: 7.1
           alpine-version: 3.7
         - php-version: 7.2
           alpine-version: 3.9
         - php-version: 7.3
           alpine-version: 3.11

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

      - name: Build & publish images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: pod-point/php-fpm
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Add - prefix
          VERSION=-$VERSION

          # If untagged, remove version
          [ "$VERSION" == "-master" ] && VERSION=""

          PROD_IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:${{ matrix.php-version }}
          DEV_IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:${{ matrix.php-version }}-dev

          PROD_IMAGE_VERSIONED=$PROD_IMAGE$VERSION
          DEV_IMAGE_VERSIONED=$DEV_IMAGE$VERSION

          docker build --tag $PROD_IMAGE --tag $PROD_IMAGE_VERSIONED --build-arg ALPINE_VERSION=${{ matrix.alpine-version }} prod
          docker build --tag $DEV_IMAGE --tag $DEV_IMAGE_VERSIONED --build-arg BASE_IMAGE=$PROD_IMAGE dev

          docker push $PROD_IMAGE
          docker push $DEV_IMAGE
          docker push $PROD_IMAGE_VERSIONED
          docker push $DEV_IMAGE_VERSIONED
